
@{
    ViewBag.Title = "Vouchers";
}

<div class="card">
    <div class="card-header">
        <div class="row float-right">
            <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#exampleModal" id="btnaddnew" onclick="@("window.location.href='" + @Url.Action("AddVoucher", "Payment") + "'");">Add new Voucher<i class="mdi mdi-play-circle ml-1"></i></button>
        </div>
    </div>
    <div class="card-body">
        <h4 class="card-title">Vouchers</h4>
        <div class="row">
            <div class="col-12">
                <div class="table-responsive">
                    <table id="example1" class="table table-striped table-bordered table-condensed table-hover">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Voucher Number</th>
                                <th>Amount</th>
                                <th>Created By</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal starts -->
@*<div class="text-center">
        <button type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#exampleModal">Click for demo<i class="mdi mdi-play-circle ml-1"></i></button>
    </div>*@

<!-- Modal Ends -->


@section MyScripts {
    <script type="text/javascript">
        $(document).ready(function () {

            $.ajax({
                url: "/Payment/GetAllPaymentVoucher",
                success: function (data) {
                    bindCustomersInDataTable(data);
                }
            });

            //show popup

            //add customer button event
            $("#btnsubmit").click(function (e) {
                console.log("here");
                e.preventDefault();

                var datatosend = {
                    objVoucher: {
                        idx: $('#idx').val(),
                        voucher_no: $('#voucher_no').val(),
                        voucher_type: $('#voucher_type option:selected').val(),
                        date_created: $('#date_created').val(),
                        description: $('#description').val(),
                        vendor_id: $('#vendor_id option:selected').val(),
                        voucher_amount: $('#voucher_amount').val(),
                        //PageList:[{ID:1},{ID:2},{ID:3}]
                        VoucherDetails: []
                    }

                }
                var selected = new Array();
                $('#example2 input[type="checkbox"]:checked').each(function () {
                    selected.push($(this).val());

                    var id, name;
                    PIID = $(this).val();
                    
                    PaidAmount=$(this).closest('tr').find('.qty').val();


                    datatosend.objVoucher.VoucherDetails.push({
                        parent_doc_id: PIID,
                        amount:PaidAmount
                    })
                    //alert('ID: ' + id + " | Name: " + name);

                });
                console.log(datatosend);
            
                var form = $("#purchaseform");

               // $.validator.unobtrusive.parse(form);
               // if ($(form).valid()){
                    
                   if (true) {
                    $.ajax({
                        type : "POST",
                        url: "/Payment/AddUpdate",
                        data: JSON.stringify(datatosend),// $(form).serialize(),
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (res) {
                            console.log(res);
                            if (res.success) {
                                //Command: toastr["success"]("", "Added Successfuly")

                                //toastr.options = {
                                //    "closeButton": false,
                                //    "debug": false,
                                //    "newestOnTop": false,
                                //    "progressBar": true,
                                //    "positionClass": "toast-top-center",
                                //    "preventDuplicates": false,
                                //    "onclick": null,
                                //    "showDuration": "300",
                                //    "hideDuration": "1000",
                                //    "timeOut": "5000",
                                //    "extendedTimeOut": "1000",
                                //    "showEasing": "swing",
                                //    "hideEasing": "linear",
                                //    "showMethod": "fadeIn",
                                //    "hideMethod": "fadeOut"
                                //}
                                window.location.href = "/MRN/ViewMRN"
                            }
                            else if (res.success == false && res.msg == 'Failed') {
                                //    Command: toastr["error"]("Invalid ", " Failed")

                                //toastr.options = {
                                //    "closeButton": false,
                                //    "debug": false,
                                //    "newestOnTop": false,
                                //    "progressBar": true,
                                //    "positionClass": "toast-top-center",
                                //    "preventDuplicates": false,
                                //    "onclick": null,
                                //    "showDuration": "300",
                                //    "hideDuration": "1000",
                                //    "timeOut": "5000",
                                //    "extendedTimeOut": "1000",
                                //    "showEasing": "swing",
                                //    "hideEasing": "linear",
                                //    "showMethod": "fadeIn",
                                //    "hideMethod": "fadeOut"
                                //}
                            }
                        },
                        failure: function (res) {
                            console.log(res);
                        },
                        err: function (res) {
                            console.log(res);
                        }

                    })
                }
                else {
                    return false;
                }

            });

            function bindCustomersInDataTable(data) {
                console.log(data);
                console.log(JSON.parse(data.data));
                var status = "Blocked".toString();
                var table = $('#example1').DataTable({
                    data: JSON.parse(data.data),
                    columns: [
                        //{ data: 'voucher_no' },
                        { data: 'dated' },

                        { data: 'invoiceNoIdx' },


                         { data: 'paidAmount' },
                         { data: 'userName' },

                   {
                       "data": "idxx",
                       "render": function (idx, type, full, meta) {

                           return '<a href="#" class="btn btn-info" onclick="ShowCustomer(' + idx + ')"><i class="fa fa-eye"></i></a> <a href="#" class="btn btn-danger" onclick="ConfirmDelete(' + idx + ')"><i class="fa fa-trash"></i></a>'
                           //return ""
                           //<a href="#" class="btn btn-danger" onclick="ConfirmDelete(' + ID + ')"><i class="fa fa-trash"></i></a>

                       },
                       "orderable": true,
                       "searchable": true,


                   }
                    ]
                });

            }


        });

        function ShowCustomer(CustomerID) {

            console.log(CustomerID);
            //$("#isMainBranch").attr("disabled", true);

            var url = "/Payment/AddVoucher?id=" + CustomerID;
           // $("#modelbody").load(url, function (e) {
                //var id = $('#CustomerID').val();
                //if (id > 0) {
                //    $('#btnaddnewclient').html("update ");

                //}
            //    $("#exampleModal").modal("show");
            //});
             window.location.href = url;


        }


        function ConfirmDelete(CustomerID) {
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })


            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, cancel!',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'GET',
                        url: '/Payment/DeletePV?id=' + CustomerID,


                        dataType: 'JSON',
                        success: function (res) {
                            if (res.success) {
                                swalWithBootstrapButtons.fire(
                                    'Done!',
                                    'Blocked',
                                    'success'
                                )
                                window.location.href = "/Payment/Vouchers"
                            }
                        }
                    })

                } else if (
                    /* Read more about handling dismissals below */
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'Your imaginary file is safe :)',
                        'error'
                    )
                }
            })
        }


    
    </script>
}